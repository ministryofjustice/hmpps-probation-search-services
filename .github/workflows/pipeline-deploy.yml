name: Pipeline deploy

on:
  workflow_call:
    inputs:
      project:
        type: string
        required: true
      environment:
        type: string
        required: true
      version:
        type: string
        required: false

permissions:
  contents: read
  checks: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency: deploy-${{ inputs.project }}-${{ inputs.environment }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0

      - name: Get build info
        uses: actions/download-artifact@v4
        with:
          name: build-info-${{ inputs.project }}
          path: projects/${{ inputs.project }}/build/info

      - name: Authenticate
        uses: ministryofjustice/hmpps-probation-integration-services/.github/actions/cloud-platform-auth@main
        with:
          api: https://${{ secrets.KUBE_CLUSTER }}
          cert: ${{ secrets.KUBE_CERT }}
          cluster: ${{ secrets.KUBE_CLUSTER }}
          namespace: ${{ secrets.KUBE_NAMESPACE }}
          token: ${{ secrets.KUBE_TOKEN }}

      - name: Deploy
        run: |
          yq -i '.appVersion = "${{ inputs.version }}"' 'projects/${{ inputs.project }}/helm_deploy/Chart.yaml'
          helm dependency update 'projects/${{ inputs.project }}/helm_deploy'
          exec helm upgrade '${{ inputs.project }}' 'projects/${{ inputs.project }}/helm_deploy' \
            --atomic \
            --history-max 10 \
            --force \
            --install \
            --reset-values \
            --set 'version=${{ inputs.version }}' \
            --set 'generic-service.image.tag=${{ inputs.version }}' \
            --set 'generic-service.env.VERSION=${{ inputs.version }}' \
            --timeout 10m \
            --values <(sed 's/build\./INFO_BUILD_/' projects/${{ inputs.project }}/build/info/build-info.properties | yq -p=props 'with_entries(.key |= upcase) | {"generic-service": {"env": .}}') \
            --values <(echo '${{ vars.HMPPS_IP_ALLOWLIST_GROUPS_YAML }}' | base64 -d) \
            --values 'projects/${{ inputs.project }}/helm_deploy/values.yaml' \
            --values 'projects/${{ inputs.project }}/helm_deploy/values-${{ inputs.environment }}.yaml' \
            --wait

      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_ORG: ministryofjustice
          SENTRY_PROJECT: ${{ inputs.project }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          environment: ${{ inputs.environment }}
          release: ${{ inputs.version }}
